apiVersionOverrides:
  ingress: networking.k8s.io/v1

server:
  ingress:
    enabled: true
    hosts:
      - argocd.aaronschweig.dev
    tls:
      - hosts:
        - argocd.aaronschweig.dev
        secretName: argocd-aaronschweig-dev
  extraArgs:
    - '--insecure'
  config:
    admin.enabled: "false"
    url: 'https://argocd.aaronschweig.dev'
    resource.customizations.health.networking.k8s.io_Ingress: |
      hs = {}
      hs.status = "Healthy"
      return hs
    resource.compareoptions: |
      ignoreAggregatedRoles: true
    dex.config: |
      staticClients:
      - id: vault-oidc
        secret: $dex.github.clientSecret
        name: 'Vault OIDC'
        redirectURIs:
          - https://vault.aaronschweig.dev/ui/vault/auth/oidc/oidc/callback # login via UI
          - http://localhost:8250/oidc/callback # login via cli
          
      connectors:
      - type: github
        id: github
        name: GitHub
        config:
          clientID: f41a4aa0aebc2f0ea394
          clientSecret: $dex.github.clientSecret
          orgs:
          - name: ams-pro
            teams:
            - devops
    configManagementPlugins: |
      - name: argocd-vault
        generate:
          command: [argocd-vault-plugin]
          args: 
            - generate
            - ./
      - name: argocd-vault-plugin-kustomize
        generate:
          command: ["sh", "-c"]
          args: ["kustomize build . --enable-helm > all.yaml && argocd-vault-plugin generate all.yaml"]
      - name: argocd-vault-plugin-helm
        init:
          command: [sh, -c]
          args: ["helm dependency build"] # for dependencies
        generate:
          command: [sh, -c]
          args: ["helm template --release-name $RELEASE_NAME -n $ARGOCD_APP_NAMESPACE . > all.yaml && argocd-vault-plugin generate all.yaml"]
  rbacConfig:
    policy.csv: |
      g, ams-pro:devops, role:admin
    policy.default: ""

repoServer:
  volumes:
  - name: custom-tools
    emptyDir: {}
  initContainers:
  - name: download-tools
    image: alpine:3.15
    command: [sh, -c]
    args:
    - >-
      RAW_VERSION=${AVP_VERSION#v}
      wget -O argocd-vault-plugin https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/${AVP_VERSION}/argocd-vault-plugin_${RAW_VERSION}_linux_amd64 &&
      chmod +x argocd-vault-plugin &&
      mv argocd-vault-plugin /custom-tools/
    env:
      - name: AVP_VERSION
        # renovate: https://github.com/argoproj-labs/argocd-vault-plugin/releases
        value: v1.11.0
  
    volumeMounts:
      - mountPath: /custom-tools
        name: custom-tools
  volumeMounts:
  - name: custom-tools
    subPath: argocd-vault-plugin
    mountPath: /usr/local/bin/argocd-vault-plugin
  env:
  - name: AVP_TYPE
    value: vault
  - name: VAULT_ADDR
    value: http://vault.default.svc.cluster.local:8200
  - name: AVP_AUTH_TYPE
    value: k8s
  - name: AVP_K8S_ROLE
    value: argocd

configs:
  credentialTemplates:
    https-creds:
      url: https://github.com/ams-pro
      username: aaronschweig
      password: <PAT>
  secret:
    extra:
      dex.github.clientSecret: <CLIENT_SECRET>

applicationSet:
  enabled: true

notifications:
  argocdUrl: 'https://argocd.aaronschweig.dev'
  secret:
    items:
      discord-url: <YOUR_WEBHOOK_URL>
  notifiers:
    service.webhook.discord: |
      url: $discord-url
      headers:
      - name: 'Content-Type'
        value: 'application/json'
  templates:
    template.app-deployed: |
      webhook:
        discord:
          method: POST
          body: |
            {
              "embeds": [
                {
                  "title": ":white_check_mark: Application {{.app.metadata.name}} is now running the new version of deployments manifests.",
                  "color": 1621586,
                  "fields": [
                    {
                      "name": "Sync Status",
                      "value": "{{.app.status.sync.status}}",
                      "inline": true
                    },
                    {
                      "name": "Repository",
                      "value": "{{.app.spec.source.repoURL}}",
                      "inline": true
                    },
                    {
                      "name": "Revision",
                      "value": "{{.app.status.sync.revision}}",
                      "inline": true
                    },
                    {
                      "name": "Version",
                      "value": "{{.app.status.summary.images}}",
                      "inline": true
                    }
                  ],
                  "author": {
                    "name": "{{.app.metadata.name}}",
                    "url": "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                    "icon_url": "https://cncf-branding.netlify.app/img/projects/argo/icon/color/argo-icon-color.png"
                  }
                }
              ]
            }
  triggers:
    trigger.on-deployed: |
      - description: Application is synced and healthy. Triggered once per commit.
        oncePer: app.status.sync.revision
        send:
        - app-deployed
